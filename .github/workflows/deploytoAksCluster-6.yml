on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Azure login
      id: login
      uses: azure/login@v1.4.3
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
          resource-group: "demoaks"
          cluster-name: "demoaks4"
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    - name: ACR build
      id: build-push-acr
      uses: azure/acr-build@v1
      with:
          service_principal: "a37780e4-b314-42b8-b5ac-22cd7ee8b67c"
          service_principal_password: "nqs8Q~ZzVRrat6fzQIoPmZ3-B5apw_8kVBNJ9aTA"
          tenant: "72f988bf-86f1-41af-91ab-2d7cd011db47"
          registry: "registrydemoaks"
          repository: "strapi"
          image:  azure-vote-front
          folder: azure-vote
          branch: master
          tag: ${{ github.sha }}
   
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t registrydemoaks.azurecr.io/demoaks4:${{ github.sha }} --label dockerfile-path=Dockerfile
        docker push registrydemoaks.azurecr.io/demoaks4:${{ github.sha }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep demoaks4a4dd | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace demoaks4a4dd`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: demoaks4a4dd
        container-registry-url: registrydemoaks.azurecr.io
        container-registry-username: ${{ secrets.acr_registrydemoaks_username }}
        container-registry-password: ${{ secrets.acr_registrydemoaks_password }}
        secret-name: demoaks4dockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: demoaks4a4dd
        manifests: |    
          ./strapi-service.yaml
          ./strapi-deployment.yaml
          ./strapi-service.yaml
          ./postgresdb-claim0-persistentvolumeclaim.yaml

        images: |
          registrydemoaks.azurecr.io/demoaks4:${{ github.sha }}
        imagepullsecrets: |
          demoaks4dockerauth
