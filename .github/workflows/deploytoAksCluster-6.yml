on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/login@v1
      with:
       client-id: ${{ secrets.AZURE_CLIENT_ID }}
       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - uses: azure/aks-set-context@v3
      with:
       resource-group: '<resource group name>'
       cluster-name: '<cluster name>'
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t registrydemoaks.azurecr.io/demoaks4:${{ github.sha }} --label dockerfile-path=Dockerfile
        docker push registrydemoaks.azurecr.io/demoaks4:${{ github.sha }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep demoaks4a4dd | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace demoaks4a4dd`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: demoaks4a4dd
        container-registry-url: registrydemoaks.azurecr.io
        container-registry-username: ${{ secrets.acr_registrydemoaks_username }}
        container-registry-password: ${{ secrets.acr_registrydemoaks_password }}
        secret-name: demoaks4dockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: demoaks4a4dd
        manifests: |    
          ./strapi-service.yaml
          ./strapi-deployment.yaml
          ./strapi-service.yaml
          ./postgresdb-claim0-persistentvolumeclaim.yaml

        images: |
          registrydemoaks.azurecr.io/demoaks4:${{ github.sha }}
        imagepullsecrets: |
          demoaks4dockerauth
